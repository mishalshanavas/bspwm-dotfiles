#!/bin/bash

# Source colors if available
[ -f ~/.config/colors.conf ] && source ~/.config/colors.conf

# Start services with existence checks
command -v pulseaudio >/dev/null 2>&1 && pulseaudio --start &
command -v picom >/dev/null 2>&1 && picom --config ~/.config/picom/picom.conf &
command -v sxhkd >/dev/null 2>&1 && sxhkd -c ~/.config/sxhkd/sxhkdrc &

# Set wallpaper background
if [ -f "$HOME/Pictures/WallPapers/fail.png" ] && command -v nitrogen >/dev/null 2>&1; then
  nitrogen --set-scaled "$HOME/Pictures/WallPapers/fail.png" &
else
  # Fallback to solid black if wallpaper not found
  xsetroot -solid "#000000" &
fi

# Set cursor and keyboard
xsetroot -cursor_name left_ptr &
setxkbmap -option caps:escape_shifted_capslock &

# Set natural scrolling (inverted scroll direction)
xinput --set-prop "$(xinput list --name-only | grep -i touchpad)" "libinput Natural Scrolling Enabled" 1 2>/dev/null || true
#xinput --set-prop "$(xinput list --name-only | grep -i mouse)" "libinput Natural Scrolling Enabled" 1 2>/dev/null || true

# Enable tap-to-click on touchpad
xinput --set-prop "$(xinput list --name-only | grep -i touchpad)" "libinput Tapping Enabled" 1 2>/dev/null || true

# Start optional services
command -v mpris-proxy >/dev/null 2>&1 && mpris-proxy &
command -v dunst >/dev/null 2>&1 && dunst &

# Start libinput-gestures for touchpad gestures
command -v libinput-gestures >/dev/null 2>&1 && libinput-gestures &

# Start EWW bar (non-blocking, with error handling)
if [ -f ~/.config/eww/start.sh ]; then
  (bash ~/.config/eww/start.sh &) || true
fi


# Create 10 workspaces
bspc monitor -d 1 2 3 4 5 6 7 8 9 10

## ── WINDOW CONFIGURATION ──────────────────────────────────────────────

# Modern border and gap settings
bspc config border_width         1
bspc config window_gap           0
bspc config top_padding          18     # Space for EWW bar
bspc config bottom_padding       0
bspc config left_padding         0
bspc config right_padding        0

# Layout behavior
bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config single_monocle       true

# Focus behavior
bspc config focus_follows_pointer   true
bspc config pointer_follows_focus   false  
bspc config pointer_follows_monitor true

# Advanced settings
bspc config click_to_focus         none
bspc config swallow_first_click    false
bspc config honor_size_hints       false
bspc config ignore_ewmh_focus      false
bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true

# Workspace switching optimization
bspc config automatic_scheme       alternate
bspc config initial_polarity       second_child
bspc config directional_focus_tightness low


# Modern color scheme (minimal monochrome)
bspc config normal_border_color    "#333333"   # Dark gray for inactive
bspc config active_border_color    "#aaaaaa"   # Light gray for active  
bspc config focused_border_color   "#cccccc"   # Lighter gray for focused
bspc config presel_feedback_color  "#666666"   # Gray for selection preview
bspc config urgent_border_color    "#ff6565"   # Red for urgent windows



## ── APPLICATION RULES ─────────────────────────────────────────────────

# Development applications  
bspc rule -a Code desktop='^1' follow=on

# Web browsers
bspc rule -a Brave-browser desktop='^2' follow=on
bspc rule -a firefox desktop='^2' follow=on

# Communication
bspc rule -a discord desktop='^3' follow=on
bspc rule -a Discord desktop='^3' follow=on

# Media applications
bspc rule -a vlc desktop='^4' follow=on

# Terminal applications
bspc rule -a kitty state=tiled

# System utilities (floating)
bspc rule -a Pavucontrol state=floating center=true
bspc rule -a Lxappearance state=floating center=true
bspc rule -a Arandr state=floating center=true
bspc rule -a Nitrogen state=floating center=true

# File managers
bspc rule -a nautilus state=floating center=true

# Special window handling
bspc rule -a Polybar manage=off

# Popup windows
bspc rule -a \*:POPUP state=floating center=true
bspc rule -a \*:popup state=floating center=true

## ── STARTUP COMPLETE ──────────────────────────────────────────────────

# Wait for services to initialize, then reload EWW (non-blocking)
(sleep 1 && command -v eww >/dev/null 2>&1 && eww reload 2>/dev/null) &
